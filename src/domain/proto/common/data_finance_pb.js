/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.mktservice.OrganizationFinance', null, global);
goog.exportSymbol('proto.mktservice.OrganizationFinanceIndicator', null, global);
goog.exportSymbol('proto.mktservice.OrganizationFinanceIndicator.EIndicatorType', null, global);
goog.exportSymbol('proto.mktservice.OrganizationFinanceIndicator.Indicator', null, global);
goog.exportSymbol('proto.mktservice.OrganizationFinanceIndicatorMapper', null, global);
goog.exportSymbol('proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.OrganizationFinanceIndicatorMapper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.OrganizationFinanceIndicatorMapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.OrganizationFinanceIndicatorMapper.displayName = 'proto.mktservice.OrganizationFinanceIndicatorMapper';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.OrganizationFinanceIndicatorMapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.OrganizationFinanceIndicatorMapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticker: jspb.Message.getFieldWithDefault(msg, 1, ""),
    yearlyMap: (f = msg.getYearlyMap()) ? f.toObject(includeInstance, proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.toObject) : [],
    quarterlyMap: (f = msg.getQuarterlyMap()) ? f.toObject(includeInstance, proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.OrganizationFinanceIndicatorMapper}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.OrganizationFinanceIndicatorMapper;
  return proto.mktservice.OrganizationFinanceIndicatorMapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.OrganizationFinanceIndicatorMapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.OrganizationFinanceIndicatorMapper}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 2:
      var value = msg.getYearlyMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.deserializeBinaryFromReader, 0);
         });
      break;
    case 3:
      var value = msg.getQuarterlyMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.deserializeBinaryFromReader, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.OrganizationFinanceIndicatorMapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.OrganizationFinanceIndicatorMapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getYearlyMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.serializeBinaryToWriter);
  }
  f = message.getQuarterlyMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.serializeBinaryToWriter);
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.repeatedFields_, null);
};
goog.inherits(proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.displayName = 'proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.mktservice.OrganizationFinanceIndicator.Indicator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators;
  return proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mktservice.OrganizationFinanceIndicator.Indicator;
      reader.readMessage(value,proto.mktservice.OrganizationFinanceIndicator.Indicator.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mktservice.OrganizationFinanceIndicator.Indicator.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OrganizationFinanceIndicator.Indicator Items = 1;
 * @return {!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mktservice.OrganizationFinanceIndicator.Indicator, 1));
};


/** @param {!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>} value */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.prototype.setItemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mktservice.OrganizationFinanceIndicator.Indicator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mktservice.OrganizationFinanceIndicator.Indicator}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mktservice.OrganizationFinanceIndicator.Indicator, opt_index);
};


proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators.prototype.clearItemsList = function() {
  this.setItemsList([]);
};


/**
 * optional string Ticker = 1;
 * @return {string}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.OrganizationFinanceIndicatorMapper.prototype.setTicker = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<int32, Indicators> Yearly = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators>}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.prototype.getYearlyMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators));
};


proto.mktservice.OrganizationFinanceIndicatorMapper.prototype.clearYearlyMap = function() {
  this.getYearlyMap().clear();
};


/**
 * map<int32, Indicators> Quarterly = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators>}
 */
proto.mktservice.OrganizationFinanceIndicatorMapper.prototype.getQuarterlyMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.mktservice.OrganizationFinanceIndicatorMapper.Indicators));
};


proto.mktservice.OrganizationFinanceIndicatorMapper.prototype.clearQuarterlyMap = function() {
  this.getQuarterlyMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.OrganizationFinanceIndicator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.OrganizationFinanceIndicator.repeatedFields_, null);
};
goog.inherits(proto.mktservice.OrganizationFinanceIndicator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.OrganizationFinanceIndicator.displayName = 'proto.mktservice.OrganizationFinanceIndicator';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.OrganizationFinanceIndicator.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.OrganizationFinanceIndicator.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.OrganizationFinanceIndicator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.OrganizationFinanceIndicator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinanceIndicator.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    yearlyList: jspb.Message.toObjectList(msg.getYearlyList(),
    proto.mktservice.OrganizationFinanceIndicator.Indicator.toObject, includeInstance),
    quarterlyList: jspb.Message.toObjectList(msg.getQuarterlyList(),
    proto.mktservice.OrganizationFinanceIndicator.Indicator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.OrganizationFinanceIndicator}
 */
proto.mktservice.OrganizationFinanceIndicator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.OrganizationFinanceIndicator;
  return proto.mktservice.OrganizationFinanceIndicator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.OrganizationFinanceIndicator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.OrganizationFinanceIndicator}
 */
proto.mktservice.OrganizationFinanceIndicator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mktservice.OrganizationFinanceIndicator.EIndicatorType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.mktservice.OrganizationFinanceIndicator.Indicator;
      reader.readMessage(value,proto.mktservice.OrganizationFinanceIndicator.Indicator.deserializeBinaryFromReader);
      msg.addYearly(value);
      break;
    case 3:
      var value = new proto.mktservice.OrganizationFinanceIndicator.Indicator;
      reader.readMessage(value,proto.mktservice.OrganizationFinanceIndicator.Indicator.deserializeBinaryFromReader);
      msg.addQuarterly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.OrganizationFinanceIndicator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.OrganizationFinanceIndicator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.OrganizationFinanceIndicator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinanceIndicator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getYearlyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mktservice.OrganizationFinanceIndicator.Indicator.serializeBinaryToWriter
    );
  }
  f = message.getQuarterlyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mktservice.OrganizationFinanceIndicator.Indicator.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.OrganizationFinanceIndicator.EIndicatorType = {
  EIT_UNSPECIFIED: 0,
  EPS: 40,
  ROE: 1,
  ROCE: 2,
  ROA: 3,
  TBVPS: 4,
  LEVERAGE: 5,
  NETMARGIN: 6,
  OPERATINGMARGIN: 7,
  GROSSMARGIN: 8,
  ASSETTURNOVER: 9,
  RECEIVABLETURNOVER: 10,
  INVENTORYTURNOVER: 11,
  PAYABLETURNOVER: 12,
  LIQUIDITYCURRENTRATIO: 13,
  LIQUIDITYQUICKRATIO: 14,
  LIQUIDITYCASHRATIO: 15,
  SOLVENCYDEBTASSETS: 16,
  SOLVENCYCASHASSETS: 17,
  SOLVENCYNETDEBTASSETS: 18,
  NETREVENUE: 19,
  GROSSPROFIT: 20,
  OPERATINGINCOME: 21,
  NETINCOME: 22,
  BALANCETOTALASSETS: 23,
  BALANCECURRENTASSETS: 24,
  BALANCENONCURRENTASSETS: 25,
  BALANCETOTALLIABILITIES: 26,
  BALANCECURRENTLIABILITIES: 27,
  BALANCENONCURRENTLIABILITIES: 28,
  BALANCETOTALEQUITY: 29,
  CASHFLOWOPERATING: 30,
  CASHFLOWINVESTING: 31,
  CASHFLOWFINANCE: 32,
  CASHFLOWEXPENSE: 33,
  FREECASHFLOW: 34,
  FORECASTINGMBSSCORE: 35,
  FORECASTINGMAGICSCORE: 36,
  FORECASTINGFSCORE: 37,
  FORECASTINGZSCORE: 38,
  FORECASTINGMSCORE: 39
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.OrganizationFinanceIndicator.Indicator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.OrganizationFinanceIndicator.Indicator.displayName = 'proto.mktservice.OrganizationFinanceIndicator.Indicator';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.OrganizationFinanceIndicator.Indicator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.OrganizationFinanceIndicator.Indicator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.toObject = function(includeInstance, msg) {
  var f, obj = {
    year: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quarterly: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ratio: (f = msg.getRatio()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    yoy: (f = msg.getYoy()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.OrganizationFinanceIndicator.Indicator}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.OrganizationFinanceIndicator.Indicator;
  return proto.mktservice.OrganizationFinanceIndicator.Indicator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.OrganizationFinanceIndicator.Indicator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.OrganizationFinanceIndicator.Indicator}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setYear(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuarterly(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setRatio(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setYoy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.OrganizationFinanceIndicator.Indicator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.OrganizationFinanceIndicator.Indicator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYear();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuarterly();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRatio();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getYoy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string year = 1;
 * @return {string}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.getYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.setYear = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string quarterly = 2;
 * @return {string}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.getQuarterly = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.setQuarterly = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.DoubleValue ratio = 3;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.getRatio = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 3));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.setRatio = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.clearRatio = function() {
  this.setRatio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.hasRatio = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.DoubleValue yoy = 4;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.getYoy = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 4));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.setYoy = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.clearYoy = function() {
  this.setYoy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.OrganizationFinanceIndicator.Indicator.prototype.hasYoy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EIndicatorType Type = 1;
 * @return {!proto.mktservice.OrganizationFinanceIndicator.EIndicatorType}
 */
proto.mktservice.OrganizationFinanceIndicator.prototype.getType = function() {
  return /** @type {!proto.mktservice.OrganizationFinanceIndicator.EIndicatorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.mktservice.OrganizationFinanceIndicator.EIndicatorType} value */
proto.mktservice.OrganizationFinanceIndicator.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Indicator Yearly = 2;
 * @return {!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>}
 */
proto.mktservice.OrganizationFinanceIndicator.prototype.getYearlyList = function() {
  return /** @type{!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mktservice.OrganizationFinanceIndicator.Indicator, 2));
};


/** @param {!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>} value */
proto.mktservice.OrganizationFinanceIndicator.prototype.setYearlyList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mktservice.OrganizationFinanceIndicator.Indicator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mktservice.OrganizationFinanceIndicator.Indicator}
 */
proto.mktservice.OrganizationFinanceIndicator.prototype.addYearly = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mktservice.OrganizationFinanceIndicator.Indicator, opt_index);
};


proto.mktservice.OrganizationFinanceIndicator.prototype.clearYearlyList = function() {
  this.setYearlyList([]);
};


/**
 * repeated Indicator Quarterly = 3;
 * @return {!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>}
 */
proto.mktservice.OrganizationFinanceIndicator.prototype.getQuarterlyList = function() {
  return /** @type{!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mktservice.OrganizationFinanceIndicator.Indicator, 3));
};


/** @param {!Array<!proto.mktservice.OrganizationFinanceIndicator.Indicator>} value */
proto.mktservice.OrganizationFinanceIndicator.prototype.setQuarterlyList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mktservice.OrganizationFinanceIndicator.Indicator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mktservice.OrganizationFinanceIndicator.Indicator}
 */
proto.mktservice.OrganizationFinanceIndicator.prototype.addQuarterly = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mktservice.OrganizationFinanceIndicator.Indicator, opt_index);
};


proto.mktservice.OrganizationFinanceIndicator.prototype.clearQuarterlyList = function() {
  this.setQuarterlyList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.OrganizationFinance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.OrganizationFinance.repeatedFields_, null);
};
goog.inherits(proto.mktservice.OrganizationFinance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.OrganizationFinance.displayName = 'proto.mktservice.OrganizationFinance';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.OrganizationFinance.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.OrganizationFinance.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.OrganizationFinance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.OrganizationFinance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinance.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticker: jspb.Message.getFieldWithDefault(msg, 1, ""),
    indicatorsList: jspb.Message.toObjectList(msg.getIndicatorsList(),
    proto.mktservice.OrganizationFinanceIndicator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.OrganizationFinance}
 */
proto.mktservice.OrganizationFinance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.OrganizationFinance;
  return proto.mktservice.OrganizationFinance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.OrganizationFinance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.OrganizationFinance}
 */
proto.mktservice.OrganizationFinance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 4:
      var value = new proto.mktservice.OrganizationFinanceIndicator;
      reader.readMessage(value,proto.mktservice.OrganizationFinanceIndicator.deserializeBinaryFromReader);
      msg.addIndicators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.OrganizationFinance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.OrganizationFinance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.OrganizationFinance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.OrganizationFinance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIndicatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mktservice.OrganizationFinanceIndicator.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Ticker = 1;
 * @return {string}
 */
proto.mktservice.OrganizationFinance.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.OrganizationFinance.prototype.setTicker = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated OrganizationFinanceIndicator Indicators = 4;
 * @return {!Array<!proto.mktservice.OrganizationFinanceIndicator>}
 */
proto.mktservice.OrganizationFinance.prototype.getIndicatorsList = function() {
  return /** @type{!Array<!proto.mktservice.OrganizationFinanceIndicator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mktservice.OrganizationFinanceIndicator, 4));
};


/** @param {!Array<!proto.mktservice.OrganizationFinanceIndicator>} value */
proto.mktservice.OrganizationFinance.prototype.setIndicatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mktservice.OrganizationFinanceIndicator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mktservice.OrganizationFinanceIndicator}
 */
proto.mktservice.OrganizationFinance.prototype.addIndicators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mktservice.OrganizationFinanceIndicator, opt_index);
};


proto.mktservice.OrganizationFinance.prototype.clearIndicatorsList = function() {
  this.setIndicatorsList([]);
};


goog.object.extend(exports, proto.mktservice);
