/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var common_data_common_pb = require('../common/data_common_pb.js');
goog.exportSymbol('proto.mktservice.EDividendMovementType', null, global);
goog.exportSymbol('proto.mktservice.StatDividendMovement', null, global);
goog.exportSymbol('proto.mktservice.StatDividendMovementSingle', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.StatDividendMovement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.StatDividendMovement.repeatedFields_, null);
};
goog.inherits(proto.mktservice.StatDividendMovement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.StatDividendMovement.displayName = 'proto.mktservice.StatDividendMovement';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.StatDividendMovement.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.StatDividendMovement.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.StatDividendMovement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.StatDividendMovement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.StatDividendMovement.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    basketcode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalbuyvalue: (f = msg.getTotalbuyvalue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    totalsellvalue: (f = msg.getTotalsellvalue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    totalnetvalue: (f = msg.getTotalnetvalue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    dividendmovementsList: jspb.Message.toObjectList(msg.getDividendmovementsList(),
    proto.mktservice.StatDividendMovementSingle.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.StatDividendMovement}
 */
proto.mktservice.StatDividendMovement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.StatDividendMovement;
  return proto.mktservice.StatDividendMovement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.StatDividendMovement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.StatDividendMovement}
 */
proto.mktservice.StatDividendMovement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBasketcode(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.EDividendMovementType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setTotalbuyvalue(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setTotalsellvalue(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setTotalnetvalue(value);
      break;
    case 7:
      var value = new proto.mktservice.StatDividendMovementSingle;
      reader.readMessage(value,proto.mktservice.StatDividendMovementSingle.deserializeBinaryFromReader);
      msg.addDividendmovements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.StatDividendMovement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.StatDividendMovement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.StatDividendMovement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.StatDividendMovement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBasketcode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTotalbuyvalue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalsellvalue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalnetvalue();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getDividendmovementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.mktservice.StatDividendMovementSingle.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp Date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.StatDividendMovement.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.StatDividendMovement.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.mktservice.StatDividendMovement.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.StatDividendMovement.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string BasketCode = 2;
 * @return {string}
 */
proto.mktservice.StatDividendMovement.prototype.getBasketcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mktservice.StatDividendMovement.prototype.setBasketcode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EDividendMovementType Type = 3;
 * @return {!proto.mktservice.EDividendMovementType}
 */
proto.mktservice.StatDividendMovement.prototype.getType = function() {
  return /** @type {!proto.mktservice.EDividendMovementType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.EDividendMovementType} value */
proto.mktservice.StatDividendMovement.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional google.protobuf.DoubleValue TotalBuyValue = 4;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.StatDividendMovement.prototype.getTotalbuyvalue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 4));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.StatDividendMovement.prototype.setTotalbuyvalue = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.mktservice.StatDividendMovement.prototype.clearTotalbuyvalue = function() {
  this.setTotalbuyvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.StatDividendMovement.prototype.hasTotalbuyvalue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.DoubleValue TotalSellValue = 5;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.StatDividendMovement.prototype.getTotalsellvalue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 5));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.StatDividendMovement.prototype.setTotalsellvalue = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.mktservice.StatDividendMovement.prototype.clearTotalsellvalue = function() {
  this.setTotalsellvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.StatDividendMovement.prototype.hasTotalsellvalue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.DoubleValue TotalNetValue = 6;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.StatDividendMovement.prototype.getTotalnetvalue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 6));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.StatDividendMovement.prototype.setTotalnetvalue = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.mktservice.StatDividendMovement.prototype.clearTotalnetvalue = function() {
  this.setTotalnetvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.StatDividendMovement.prototype.hasTotalnetvalue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated StatDividendMovementSingle DividendMovements = 7;
 * @return {!Array<!proto.mktservice.StatDividendMovementSingle>}
 */
proto.mktservice.StatDividendMovement.prototype.getDividendmovementsList = function() {
  return /** @type{!Array<!proto.mktservice.StatDividendMovementSingle>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mktservice.StatDividendMovementSingle, 7));
};


/** @param {!Array<!proto.mktservice.StatDividendMovementSingle>} value */
proto.mktservice.StatDividendMovement.prototype.setDividendmovementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.mktservice.StatDividendMovementSingle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mktservice.StatDividendMovementSingle}
 */
proto.mktservice.StatDividendMovement.prototype.addDividendmovements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.mktservice.StatDividendMovementSingle, opt_index);
};


proto.mktservice.StatDividendMovement.prototype.clearDividendmovementsList = function() {
  this.setDividendmovementsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.StatDividendMovementSingle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.StatDividendMovementSingle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.StatDividendMovementSingle.displayName = 'proto.mktservice.StatDividendMovementSingle';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.StatDividendMovementSingle.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.StatDividendMovementSingle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.StatDividendMovementSingle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.StatDividendMovementSingle.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticker: jspb.Message.getFieldWithDefault(msg, 1, ""),
    changedpercentage: (f = msg.getChangedpercentage()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    totalforeignbuyvalue: (f = msg.getTotalforeignbuyvalue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    totalforeignsellvalue: (f = msg.getTotalforeignsellvalue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    totalforeignnetvalue: (f = msg.getTotalforeignnetvalue()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    lastsalecolor: jspb.Message.getFieldWithDefault(msg, 9, 0),
    foreignnetcolor: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.StatDividendMovementSingle}
 */
proto.mktservice.StatDividendMovementSingle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.StatDividendMovementSingle;
  return proto.mktservice.StatDividendMovementSingle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.StatDividendMovementSingle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.StatDividendMovementSingle}
 */
proto.mktservice.StatDividendMovementSingle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setChangedpercentage(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setTotalforeignbuyvalue(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setTotalforeignsellvalue(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setTotalforeignnetvalue(value);
      break;
    case 9:
      var value = /** @type {!proto.mktservice.EMarketColorCode} */ (reader.readEnum());
      msg.setLastsalecolor(value);
      break;
    case 10:
      var value = /** @type {!proto.mktservice.EMarketColorCode} */ (reader.readEnum());
      msg.setForeignnetcolor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.StatDividendMovementSingle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.StatDividendMovementSingle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.StatDividendMovementSingle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.StatDividendMovementSingle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChangedpercentage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalforeignbuyvalue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalforeignsellvalue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getTotalforeignnetvalue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getLastsalecolor();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getForeignnetcolor();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
};


/**
 * optional string Ticker = 1;
 * @return {string}
 */
proto.mktservice.StatDividendMovementSingle.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.StatDividendMovementSingle.prototype.setTicker = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.DoubleValue ChangedPercentage = 2;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.StatDividendMovementSingle.prototype.getChangedpercentage = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 2));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.StatDividendMovementSingle.prototype.setChangedpercentage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.mktservice.StatDividendMovementSingle.prototype.clearChangedpercentage = function() {
  this.setChangedpercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.StatDividendMovementSingle.prototype.hasChangedpercentage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.DoubleValue TotalForeignBuyValue = 3;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.StatDividendMovementSingle.prototype.getTotalforeignbuyvalue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 3));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.StatDividendMovementSingle.prototype.setTotalforeignbuyvalue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.mktservice.StatDividendMovementSingle.prototype.clearTotalforeignbuyvalue = function() {
  this.setTotalforeignbuyvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.StatDividendMovementSingle.prototype.hasTotalforeignbuyvalue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.DoubleValue TotalForeignSellValue = 4;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.StatDividendMovementSingle.prototype.getTotalforeignsellvalue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 4));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.StatDividendMovementSingle.prototype.setTotalforeignsellvalue = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.mktservice.StatDividendMovementSingle.prototype.clearTotalforeignsellvalue = function() {
  this.setTotalforeignsellvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.StatDividendMovementSingle.prototype.hasTotalforeignsellvalue = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.DoubleValue TotalForeignNetValue = 5;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.mktservice.StatDividendMovementSingle.prototype.getTotalforeignnetvalue = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 5));
};


/** @param {?proto.google.protobuf.DoubleValue|undefined} value */
proto.mktservice.StatDividendMovementSingle.prototype.setTotalforeignnetvalue = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.mktservice.StatDividendMovementSingle.prototype.clearTotalforeignnetvalue = function() {
  this.setTotalforeignnetvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.StatDividendMovementSingle.prototype.hasTotalforeignnetvalue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EMarketColorCode LastSaleColor = 9;
 * @return {!proto.mktservice.EMarketColorCode}
 */
proto.mktservice.StatDividendMovementSingle.prototype.getLastsalecolor = function() {
  return /** @type {!proto.mktservice.EMarketColorCode} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.mktservice.EMarketColorCode} value */
proto.mktservice.StatDividendMovementSingle.prototype.setLastsalecolor = function(value) {
  jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional EMarketColorCode ForeignNetColor = 10;
 * @return {!proto.mktservice.EMarketColorCode}
 */
proto.mktservice.StatDividendMovementSingle.prototype.getForeignnetcolor = function() {
  return /** @type {!proto.mktservice.EMarketColorCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.mktservice.EMarketColorCode} value */
proto.mktservice.StatDividendMovementSingle.prototype.setForeignnetcolor = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * @enum {number}
 */
proto.mktservice.EDividendMovementType = {
  FOREIGNERTRADING: 0
};

goog.object.extend(exports, proto.mktservice);
