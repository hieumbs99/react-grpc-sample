/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.mktservice.EClientType', null, global);
goog.exportSymbol('proto.mktservice.EHeaderTransmissionType', null, global);
goog.exportSymbol('proto.mktservice.ELanguage', null, global);
goog.exportSymbol('proto.mktservice.EMarketCode', null, global);
goog.exportSymbol('proto.mktservice.EMarketColorCode', null, global);
goog.exportSymbol('proto.mktservice.EMarketDistributionType', null, global);
goog.exportSymbol('proto.mktservice.EMarketStatsType', null, global);
goog.exportSymbol('proto.mktservice.ERecommendationSource', null, global);
goog.exportSymbol('proto.mktservice.ESecuritiesType', null, global);
goog.exportSymbol('proto.mktservice.EStatisticalTopBasket', null, global);
goog.exportSymbol('proto.mktservice.ESuportedIndexCode', null, global);
goog.exportSymbol('proto.mktservice.ETILoadStatus', null, global);
goog.exportSymbol('proto.mktservice.ETickerType', null, global);
goog.exportSymbol('proto.mktservice.ETradingDate', null, global);
goog.exportSymbol('proto.mktservice.ETradingSession', null, global);
goog.exportSymbol('proto.mktservice.ETradingSide', null, global);
goog.exportSymbol('proto.mktservice.ETradingStatus', null, global);
goog.exportSymbol('proto.mktservice.Header', null, global);
goog.exportSymbol('proto.mktservice.Noop', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.Header = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.Header, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.Header.displayName = 'proto.mktservice.Header';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.Header.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.Header.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.Header} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.Header.toObject = function(includeInstance, msg) {
  var f, obj = {
    transmissiontype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tradingsession: jspb.Message.getFieldWithDefault(msg, 2, 0),
    marketcode: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.Header}
 */
proto.mktservice.Header.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.Header;
  return proto.mktservice.Header.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.Header} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.Header}
 */
proto.mktservice.Header.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mktservice.EHeaderTransmissionType} */ (reader.readEnum());
      msg.setTransmissiontype(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.ETradingSession} */ (reader.readEnum());
      msg.setTradingsession(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.EMarketCode} */ (reader.readEnum());
      msg.setMarketcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.Header.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.Header.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.Header} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.Header.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransmissiontype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTradingsession();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMarketcode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional EHeaderTransmissionType TransmissionType = 1;
 * @return {!proto.mktservice.EHeaderTransmissionType}
 */
proto.mktservice.Header.prototype.getTransmissiontype = function() {
  return /** @type {!proto.mktservice.EHeaderTransmissionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.mktservice.EHeaderTransmissionType} value */
proto.mktservice.Header.prototype.setTransmissiontype = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ETradingSession TradingSession = 2;
 * @return {!proto.mktservice.ETradingSession}
 */
proto.mktservice.Header.prototype.getTradingsession = function() {
  return /** @type {!proto.mktservice.ETradingSession} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.ETradingSession} value */
proto.mktservice.Header.prototype.setTradingsession = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional EMarketCode MarketCode = 3;
 * @return {!proto.mktservice.EMarketCode}
 */
proto.mktservice.Header.prototype.getMarketcode = function() {
  return /** @type {!proto.mktservice.EMarketCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.EMarketCode} value */
proto.mktservice.Header.prototype.setMarketcode = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.Noop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.Noop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.Noop.displayName = 'proto.mktservice.Noop';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.Noop.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.Noop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.Noop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.Noop.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.Noop}
 */
proto.mktservice.Noop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.Noop;
  return proto.mktservice.Noop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.Noop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.Noop}
 */
proto.mktservice.Noop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.Noop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.Noop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.Noop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.Noop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mktservice.Noop.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.Noop.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.mktservice.ELanguage = {
  VI: 0,
  EN: 1,
  KR: 2,
  JP: 3,
  CN: 4
};

/**
 * @enum {number}
 */
proto.mktservice.ETickerType = {
  ALL: 0,
  SECURITIES: 1,
  DERIVATIVES: 2,
  COVERWARRANT: 3,
  BOND: 4,
  INDEX: 5,
  INDUSTRY: 6,
  RECOMMENDATION: 7,
  ETF: 8
};

/**
 * @enum {number}
 */
proto.mktservice.ETradingStatus = {
  ETA_NORMAL: 0,
  ETA_HALT: 1
};

/**
 * @enum {number}
 */
proto.mktservice.EMarketCode = {
  EMC_UNKNOWN: 0,
  HSX_ALL: 20,
  HSX_LISTED: 21,
  HNX_ALL: 10,
  HNX_LISTED: 11,
  HNX_UPCOM: 19,
  HNX_DERIVATIVE: 15,
  HNX_BOND_LISTED: 14
};

/**
 * @enum {number}
 */
proto.mktservice.EMarketColorCode = {
  COLOR_NOCHANGE: 0,
  COLOR_FLOOR: -2,
  COLOR_DECLINE: -1,
  COLOR_ADVANCE: 1,
  COLOR_CEILING: 2
};

/**
 * @enum {number}
 */
proto.mktservice.ETradingSession = {
  ETS_UNKNOWN: 0,
  PRE_MARKET_CORP: 10,
  PRE_MARKET_EXCH: 11,
  IN_MARKET_BUY_IN: 20,
  IN_MARKET_ATO: 30,
  IN_MARKET_OPEN: 40,
  IN_MARKET_BREAK: 50,
  IN_MARKET_ATC: 70,
  IN_MARKET_RUNOFF: 80,
  IN_MARKET_SELL_OUT: 89,
  POST_MARKET_SUMMARY: 90,
  POST_MARKET_FINISH: 99
};

/**
 * @enum {number}
 */
proto.mktservice.ETradingSide = {
  ESIDE_UNKNOWN: 0,
  ESIDE_BUY: 1,
  ESIDE_SELL: 2
};

/**
 * @enum {number}
 */
proto.mktservice.ESecuritiesType = {
  EST_STOCK: 0,
  EST_ETF: 1,
  EST_COVERWARRANT: 2,
  EST_FUTURE: 3,
  EST_OPTION: 4,
  EST_BONDFUTURE: 5,
  EST_BOND: 10,
  EST_CORPBOND: 11,
  EST_GOVBOND: 12,
  EST_FUND: 20,
  EST_MUTUALFUND: 21
};

/**
 * @enum {number}
 */
proto.mktservice.ESuportedIndexCode = {
  UPCOMINDEX: 0,
  HNXINDEX: 10,
  VNINDEX: 30,
  VN30: 31,
  VNX50: 32,
  VN100: 33,
  VNXALL: 34,
  VNALL: 35,
  VNCOND: 36,
  VNCONS: 37,
  VNENE: 38,
  VNFIN: 39,
  VNHEAL: 40,
  VNIND: 41,
  VNIT: 42,
  VNMAT: 43,
  VNMID: 44,
  VNREAL: 45,
  VNSI: 46,
  VNSML: 47,
  VNUTI: 48
};

/**
 * @enum {number}
 */
proto.mktservice.EStatisticalTopBasket = {
  ESTB_ALL: 0,
  ESTB_HSX_LISTED: 1,
  ESTB_HNX_LISTED: 2,
  ESTB_HNX_UPCOM: 3,
  ESTB_VN30: 4,
  ESTB_UNSPECIFIED: 999
};

/**
 * @enum {number}
 */
proto.mktservice.ERecommendationSource = {
  RECOMMENDATION_ALL: 0,
  RECOMMENDATION_MBS: 1
};

/**
 * @enum {number}
 */
proto.mktservice.ETILoadStatus = {
  ETI_LOADING: 0,
  ETI_LOAD: 2,
  ETI_FAILED: 3
};

/**
 * @enum {number}
 */
proto.mktservice.EHeaderTransmissionType = {
  NEW: 0,
  UPDATE: 1,
  REPLAY: 2
};

/**
 * @enum {number}
 */
proto.mktservice.ETradingDate = {
  PRESENT: 0,
  ONE_DAY_AGO: 1,
  TWO_DAY_AGO: 2,
  THREE_DAY_AGO: 3,
  FOUR_DAY_AGO: 4,
  ONE_WEEK_AGO: 5,
  TWO_WEEK_AGO: 6,
  ONE_MONTH_AGO: 7
};

/**
 * @enum {number}
 */
proto.mktservice.EMarketStatsType = {
  CONTRIBUTION: 0,
  SCALE: 1
};

/**
 * @enum {number}
 */
proto.mktservice.EMarketDistributionType = {
  VALUE: 0,
  VOLUME: 1,
  MARKET_CAP: 3,
  SUMMARY: 10
};

/**
 * @enum {number}
 */
proto.mktservice.EClientType = {
  MOBILE: 0,
  WEB: 1
};

goog.object.extend(exports, proto.mktservice);
