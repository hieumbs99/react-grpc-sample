/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var common_data_common_pb = require('./common/data_common_pb.js');
var common_data_ticker_info_pb = require('./common/data_ticker_info_pb.js');
var common_data_timeandsale_pb = require('./common/data_timeandsale_pb.js');
var common_data_index_pb = require('./common/data_index_pb.js');
var common_data_priceinfo_pb = require('./common/data_priceinfo_pb.js');
var common_data_recommendation_pb = require('./common/data_recommendation_pb.js');
var common_data_chart_pb = require('./common/data_chart_pb.js');
var common_data_profile_pb = require('./common/data_profile_pb.js');
var common_data_fundamental_pb = require('./common/data_fundamental_pb.js');
var common_data_finance_pb = require('./common/data_finance_pb.js');
var common_data_org_events_pb = require('./common/data_org_events_pb.js');
var common_stat_top_pb = require('./common/stat_top_pb.js');
var common_stat_contribution_pb = require('./common/stat_contribution_pb.js');
var common_stat_market_stats_pb = require('./common/stat_market_stats_pb.js');
var common_stat_market_distribution_pb = require('./common/stat_market_distribution_pb.js');
var common_stat_ad_indicator_pb = require('./common/stat_ad_indicator_pb.js');
var common_data_orderflow_distribution_pb = require('./common/data_orderflow_distribution_pb.js');
var common_stat_dividend_movement_pb = require('./common/stat_dividend_movement_pb.js');
goog.exportSymbol('proto.mktservice.RequestChartDataTicker', null, global);
goog.exportSymbol('proto.mktservice.RequestChartDataTicker.EFieldType', null, global);
goog.exportSymbol('proto.mktservice.RequestChartDataTickers', null, global);
goog.exportSymbol('proto.mktservice.RequestChartDataTickers.EFieldType', null, global);
goog.exportSymbol('proto.mktservice.RequestListPriceInfoPutThrough', null, global);
goog.exportSymbol('proto.mktservice.RequestListSingleChartDataTicker', null, global);
goog.exportSymbol('proto.mktservice.RequestListTickers', null, global);
goog.exportSymbol('proto.mktservice.RequestMarketCoverWarrant', null, global);
goog.exportSymbol('proto.mktservice.RequestMarketDistribution', null, global);
goog.exportSymbol('proto.mktservice.RequestMarketDistribution.EDistribution', null, global);
goog.exportSymbol('proto.mktservice.RequestMarketRecommendations', null, global);
goog.exportSymbol('proto.mktservice.RequestMarketStats', null, global);
goog.exportSymbol('proto.mktservice.RequestMarketStats.EMarketStats', null, global);
goog.exportSymbol('proto.mktservice.RequestOrderFlowDistribution', null, global);
goog.exportSymbol('proto.mktservice.RequestOrganizationTicker', null, global);
goog.exportSymbol('proto.mktservice.RequestPriceInfoTicker', null, global);
goog.exportSymbol('proto.mktservice.RequestPriceInfoTickers', null, global);
goog.exportSymbol('proto.mktservice.RequestStatBasketContribution', null, global);
goog.exportSymbol('proto.mktservice.RequestStatBasketContribution.EContribution', null, global);
goog.exportSymbol('proto.mktservice.RequestStatDividendMovement', null, global);
goog.exportSymbol('proto.mktservice.RequestStatDividendMovement.EMarketStats', null, global);
goog.exportSymbol('proto.mktservice.RequestStatMarketADIndicator', null, global);
goog.exportSymbol('proto.mktservice.RequestStatTopTickers', null, global);
goog.exportSymbol('proto.mktservice.RequestStatTopTickers.RequestTopInfo', null, global);
goog.exportSymbol('proto.mktservice.RequestTimeAndSaleTicker', null, global);
goog.exportSymbol('proto.mktservice.RequestTimeAndSaleTicker.ETimeAndSaleType', null, global);
goog.exportSymbol('proto.mktservice.RequestTimeAndSaleTickers', null, global);
goog.exportSymbol('proto.mktservice.RequestTimeAndSaleTickers.ETimeAndSaleType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestOrganizationTicker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestOrganizationTicker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestOrganizationTicker.displayName = 'proto.mktservice.RequestOrganizationTicker';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestOrganizationTicker.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestOrganizationTicker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestOrganizationTicker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestOrganizationTicker.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    language: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestOrganizationTicker}
 */
proto.mktservice.RequestOrganizationTicker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestOrganizationTicker;
  return proto.mktservice.RequestOrganizationTicker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestOrganizationTicker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestOrganizationTicker}
 */
proto.mktservice.RequestOrganizationTicker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.ELanguage} */ (reader.readEnum());
      msg.setLanguage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestOrganizationTicker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestOrganizationTicker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestOrganizationTicker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestOrganizationTicker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguage();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestOrganizationTicker.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestOrganizationTicker.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Ticker = 2;
 * @return {string}
 */
proto.mktservice.RequestOrganizationTicker.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mktservice.RequestOrganizationTicker.prototype.setTicker = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ELanguage Language = 3;
 * @return {!proto.mktservice.ELanguage}
 */
proto.mktservice.RequestOrganizationTicker.prototype.getLanguage = function() {
  return /** @type {!proto.mktservice.ELanguage} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.ELanguage} value */
proto.mktservice.RequestOrganizationTicker.prototype.setLanguage = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestChartDataTicker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestChartDataTicker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestChartDataTicker.displayName = 'proto.mktservice.RequestChartDataTicker';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestChartDataTicker.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestChartDataTicker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestChartDataTicker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestChartDataTicker.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resolution: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ticker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    end: (f = msg.getEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    begin: (f = msg.getBegin()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    requestfield: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestChartDataTicker}
 */
proto.mktservice.RequestChartDataTicker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestChartDataTicker;
  return proto.mktservice.RequestChartDataTicker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestChartDataTicker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestChartDataTicker}
 */
proto.mktservice.RequestChartDataTicker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.EResolutions} */ (reader.readEnum());
      msg.setResolution(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBegin(value);
      break;
    case 10:
      var value = /** @type {!proto.mktservice.RequestChartDataTicker.EFieldType} */ (reader.readEnum());
      msg.setRequestfield(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestChartDataTicker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestChartDataTicker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestChartDataTicker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestChartDataTicker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResolution();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBegin();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRequestfield();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.RequestChartDataTicker.EFieldType = {
  EFIELDTYPE_CLOSE: 0,
  EFIELDTYPE_OPEN: 1,
  EFIELDTYPE_HIGH: 2,
  EFIELDTYPE_LOW: 3,
  EFIELDTYPE_VOLUME: 5,
  EFIELDTYPE_NETVALUES: 6,
  EFIELDTYPE_VALUE: 7,
  EFIELDTYPE_VALUE_ALL: 8,
  EFIELDTYPE_ALL: 9
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestChartDataTicker.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestChartDataTicker.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EResolutions Resolution = 2;
 * @return {!proto.mktservice.EResolutions}
 */
proto.mktservice.RequestChartDataTicker.prototype.getResolution = function() {
  return /** @type {!proto.mktservice.EResolutions} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.EResolutions} value */
proto.mktservice.RequestChartDataTicker.prototype.setResolution = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string Ticker = 3;
 * @return {string}
 */
proto.mktservice.RequestChartDataTicker.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.mktservice.RequestChartDataTicker.prototype.setTicker = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 Limit = 5;
 * @return {number}
 */
proto.mktservice.RequestChartDataTicker.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.mktservice.RequestChartDataTicker.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp End = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestChartDataTicker.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestChartDataTicker.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.mktservice.RequestChartDataTicker.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestChartDataTicker.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp Begin = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestChartDataTicker.prototype.getBegin = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestChartDataTicker.prototype.setBegin = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.mktservice.RequestChartDataTicker.prototype.clearBegin = function() {
  this.setBegin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestChartDataTicker.prototype.hasBegin = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EFieldType RequestField = 10;
 * @return {!proto.mktservice.RequestChartDataTicker.EFieldType}
 */
proto.mktservice.RequestChartDataTicker.prototype.getRequestfield = function() {
  return /** @type {!proto.mktservice.RequestChartDataTicker.EFieldType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.mktservice.RequestChartDataTicker.EFieldType} value */
proto.mktservice.RequestChartDataTicker.prototype.setRequestfield = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestListSingleChartDataTicker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.RequestListSingleChartDataTicker.repeatedFields_, null);
};
goog.inherits(proto.mktservice.RequestListSingleChartDataTicker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestListSingleChartDataTicker.displayName = 'proto.mktservice.RequestListSingleChartDataTicker';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.RequestListSingleChartDataTicker.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestListSingleChartDataTicker.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestListSingleChartDataTicker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestListSingleChartDataTicker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestListSingleChartDataTicker.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    listtickersList: jspb.Message.toObjectList(msg.getListtickersList(),
    proto.mktservice.RequestChartDataTicker.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestListSingleChartDataTicker}
 */
proto.mktservice.RequestListSingleChartDataTicker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestListSingleChartDataTicker;
  return proto.mktservice.RequestListSingleChartDataTicker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestListSingleChartDataTicker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestListSingleChartDataTicker}
 */
proto.mktservice.RequestListSingleChartDataTicker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = new proto.mktservice.RequestChartDataTicker;
      reader.readMessage(value,proto.mktservice.RequestChartDataTicker.deserializeBinaryFromReader);
      msg.addListtickers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestListSingleChartDataTicker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestListSingleChartDataTicker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestListSingleChartDataTicker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestListSingleChartDataTicker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getListtickersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mktservice.RequestChartDataTicker.serializeBinaryToWriter
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestListSingleChartDataTicker.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestListSingleChartDataTicker.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated RequestChartDataTicker ListTickers = 2;
 * @return {!Array<!proto.mktservice.RequestChartDataTicker>}
 */
proto.mktservice.RequestListSingleChartDataTicker.prototype.getListtickersList = function() {
  return /** @type{!Array<!proto.mktservice.RequestChartDataTicker>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mktservice.RequestChartDataTicker, 2));
};


/** @param {!Array<!proto.mktservice.RequestChartDataTicker>} value */
proto.mktservice.RequestListSingleChartDataTicker.prototype.setListtickersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mktservice.RequestChartDataTicker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mktservice.RequestChartDataTicker}
 */
proto.mktservice.RequestListSingleChartDataTicker.prototype.addListtickers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mktservice.RequestChartDataTicker, opt_index);
};


proto.mktservice.RequestListSingleChartDataTicker.prototype.clearListtickersList = function() {
  this.setListtickersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestChartDataTickers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.RequestChartDataTickers.repeatedFields_, null);
};
goog.inherits(proto.mktservice.RequestChartDataTickers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestChartDataTickers.displayName = 'proto.mktservice.RequestChartDataTickers';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.RequestChartDataTickers.repeatedFields_ = [3,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestChartDataTickers.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestChartDataTickers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestChartDataTickers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestChartDataTickers.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resolution: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tickersList: jspb.Message.getRepeatedField(msg, 3),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    end: (f = msg.getEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    begin: (f = msg.getBegin()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    requestfield: jspb.Message.getFieldWithDefault(msg, 10, 0),
    tradingdatesList: jspb.Message.getRepeatedField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestChartDataTickers}
 */
proto.mktservice.RequestChartDataTickers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestChartDataTickers;
  return proto.mktservice.RequestChartDataTickers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestChartDataTickers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestChartDataTickers}
 */
proto.mktservice.RequestChartDataTickers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.EResolutions} */ (reader.readEnum());
      msg.setResolution(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTickers(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBegin(value);
      break;
    case 10:
      var value = /** @type {!proto.mktservice.RequestChartDataTickers.EFieldType} */ (reader.readEnum());
      msg.setRequestfield(value);
      break;
    case 11:
      var value = /** @type {!Array<!proto.mktservice.ETradingDate>} */ (reader.readPackedEnum());
      msg.setTradingdatesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestChartDataTickers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestChartDataTickers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestChartDataTickers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestChartDataTickers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResolution();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTickersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getBegin();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRequestfield();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getTradingdatesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.RequestChartDataTickers.EFieldType = {
  EFIELDTYPE_CLOSE: 0,
  EFIELDTYPE_OPEN: 1,
  EFIELDTYPE_HIGH: 2,
  EFIELDTYPE_LOW: 3,
  EFIELDTYPE_VOLUME: 5,
  EFIELDTYPE_NETVALUES: 6,
  EFIELDTYPE_VALUE: 7,
  EFIELDTYPE_VALUE_ALL: 8,
  EFIELDTYPE_ALL: 9
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestChartDataTickers.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestChartDataTickers.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EResolutions Resolution = 2;
 * @return {!proto.mktservice.EResolutions}
 */
proto.mktservice.RequestChartDataTickers.prototype.getResolution = function() {
  return /** @type {!proto.mktservice.EResolutions} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.EResolutions} value */
proto.mktservice.RequestChartDataTickers.prototype.setResolution = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string Tickers = 3;
 * @return {!Array<string>}
 */
proto.mktservice.RequestChartDataTickers.prototype.getTickersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.mktservice.RequestChartDataTickers.prototype.setTickersList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.mktservice.RequestChartDataTickers.prototype.addTickers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.mktservice.RequestChartDataTickers.prototype.clearTickersList = function() {
  this.setTickersList([]);
};


/**
 * optional int64 Limit = 5;
 * @return {number}
 */
proto.mktservice.RequestChartDataTickers.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.mktservice.RequestChartDataTickers.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp End = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestChartDataTickers.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestChartDataTickers.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.mktservice.RequestChartDataTickers.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestChartDataTickers.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp Begin = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestChartDataTickers.prototype.getBegin = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestChartDataTickers.prototype.setBegin = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.mktservice.RequestChartDataTickers.prototype.clearBegin = function() {
  this.setBegin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestChartDataTickers.prototype.hasBegin = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EFieldType RequestField = 10;
 * @return {!proto.mktservice.RequestChartDataTickers.EFieldType}
 */
proto.mktservice.RequestChartDataTickers.prototype.getRequestfield = function() {
  return /** @type {!proto.mktservice.RequestChartDataTickers.EFieldType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.mktservice.RequestChartDataTickers.EFieldType} value */
proto.mktservice.RequestChartDataTickers.prototype.setRequestfield = function(value) {
  jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * repeated ETradingDate TradingDates = 11;
 * @return {!Array<!proto.mktservice.ETradingDate>}
 */
proto.mktservice.RequestChartDataTickers.prototype.getTradingdatesList = function() {
  return /** @type {!Array<!proto.mktservice.ETradingDate>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<!proto.mktservice.ETradingDate>} value */
proto.mktservice.RequestChartDataTickers.prototype.setTradingdatesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!proto.mktservice.ETradingDate} value
 * @param {number=} opt_index
 */
proto.mktservice.RequestChartDataTickers.prototype.addTradingdates = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.mktservice.RequestChartDataTickers.prototype.clearTradingdatesList = function() {
  this.setTradingdatesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestStatTopTickers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.RequestStatTopTickers.repeatedFields_, null);
};
goog.inherits(proto.mktservice.RequestStatTopTickers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestStatTopTickers.displayName = 'proto.mktservice.RequestStatTopTickers';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.RequestStatTopTickers.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestStatTopTickers.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestStatTopTickers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestStatTopTickers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatTopTickers.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    infoList: jspb.Message.toObjectList(msg.getInfoList(),
    proto.mktservice.RequestStatTopTickers.RequestTopInfo.toObject, includeInstance),
    basket: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestStatTopTickers}
 */
proto.mktservice.RequestStatTopTickers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestStatTopTickers;
  return proto.mktservice.RequestStatTopTickers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestStatTopTickers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestStatTopTickers}
 */
proto.mktservice.RequestStatTopTickers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = new proto.mktservice.RequestStatTopTickers.RequestTopInfo;
      reader.readMessage(value,proto.mktservice.RequestStatTopTickers.RequestTopInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.EStatisticalTopBasket} */ (reader.readEnum());
      msg.setBasket(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestStatTopTickers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestStatTopTickers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestStatTopTickers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatTopTickers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mktservice.RequestStatTopTickers.RequestTopInfo.serializeBinaryToWriter
    );
  }
  f = message.getBasket();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestStatTopTickers.RequestTopInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestStatTopTickers.RequestTopInfo.displayName = 'proto.mktservice.RequestStatTopTickers.RequestTopInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestStatTopTickers.RequestTopInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestStatTopTickers.RequestTopInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    direction: jspb.Message.getFieldWithDefault(msg, 2, 0),
    period: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestStatTopTickers.RequestTopInfo}
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestStatTopTickers.RequestTopInfo;
  return proto.mktservice.RequestStatTopTickers.RequestTopInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestStatTopTickers.RequestTopInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestStatTopTickers.RequestTopInfo}
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mktservice.StatTopTickers.EStatTopType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.StatTopTickers.EDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.StatTopTickers.EPeriod} */ (reader.readEnum());
      msg.setPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestStatTopTickers.RequestTopInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestStatTopTickers.RequestTopInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional StatTopTickers.EStatTopType Type = 1;
 * @return {!proto.mktservice.StatTopTickers.EStatTopType}
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.prototype.getType = function() {
  return /** @type {!proto.mktservice.StatTopTickers.EStatTopType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.mktservice.StatTopTickers.EStatTopType} value */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional StatTopTickers.EDirection Direction = 2;
 * @return {!proto.mktservice.StatTopTickers.EDirection}
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.prototype.getDirection = function() {
  return /** @type {!proto.mktservice.StatTopTickers.EDirection} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.StatTopTickers.EDirection} value */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.prototype.setDirection = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional StatTopTickers.EPeriod Period = 3;
 * @return {!proto.mktservice.StatTopTickers.EPeriod}
 */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.prototype.getPeriod = function() {
  return /** @type {!proto.mktservice.StatTopTickers.EPeriod} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.StatTopTickers.EPeriod} value */
proto.mktservice.RequestStatTopTickers.RequestTopInfo.prototype.setPeriod = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestStatTopTickers.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestStatTopTickers.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated RequestTopInfo Info = 2;
 * @return {!Array<!proto.mktservice.RequestStatTopTickers.RequestTopInfo>}
 */
proto.mktservice.RequestStatTopTickers.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.mktservice.RequestStatTopTickers.RequestTopInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mktservice.RequestStatTopTickers.RequestTopInfo, 2));
};


/** @param {!Array<!proto.mktservice.RequestStatTopTickers.RequestTopInfo>} value */
proto.mktservice.RequestStatTopTickers.prototype.setInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mktservice.RequestStatTopTickers.RequestTopInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mktservice.RequestStatTopTickers.RequestTopInfo}
 */
proto.mktservice.RequestStatTopTickers.prototype.addInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mktservice.RequestStatTopTickers.RequestTopInfo, opt_index);
};


proto.mktservice.RequestStatTopTickers.prototype.clearInfoList = function() {
  this.setInfoList([]);
};


/**
 * optional EStatisticalTopBasket Basket = 3;
 * @return {!proto.mktservice.EStatisticalTopBasket}
 */
proto.mktservice.RequestStatTopTickers.prototype.getBasket = function() {
  return /** @type {!proto.mktservice.EStatisticalTopBasket} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.EStatisticalTopBasket} value */
proto.mktservice.RequestStatTopTickers.prototype.setBasket = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 Limit = 4;
 * @return {number}
 */
proto.mktservice.RequestStatTopTickers.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.mktservice.RequestStatTopTickers.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestStatBasketContribution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestStatBasketContribution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestStatBasketContribution.displayName = 'proto.mktservice.RequestStatBasketContribution';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestStatBasketContribution.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestStatBasketContribution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestStatBasketContribution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatBasketContribution.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    by: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestStatBasketContribution}
 */
proto.mktservice.RequestStatBasketContribution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestStatBasketContribution;
  return proto.mktservice.RequestStatBasketContribution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestStatBasketContribution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestStatBasketContribution}
 */
proto.mktservice.RequestStatBasketContribution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.RequestStatBasketContribution.EContribution} */ (reader.readEnum());
      msg.setBy(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestStatBasketContribution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestStatBasketContribution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestStatBasketContribution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatBasketContribution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBy();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.RequestStatBasketContribution.EContribution = {
  VN30: 0,
  VNINDEX: 1,
  HNX_LISTED: 2,
  HNX_UPCOM: 3,
  HSX_LISTED: 4,
  HNX30: 5
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestStatBasketContribution.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestStatBasketContribution.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EContribution By = 2;
 * @return {!proto.mktservice.RequestStatBasketContribution.EContribution}
 */
proto.mktservice.RequestStatBasketContribution.prototype.getBy = function() {
  return /** @type {!proto.mktservice.RequestStatBasketContribution.EContribution} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.RequestStatBasketContribution.EContribution} value */
proto.mktservice.RequestStatBasketContribution.prototype.setBy = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 Limit = 3;
 * @return {number}
 */
proto.mktservice.RequestStatBasketContribution.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.mktservice.RequestStatBasketContribution.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestMarketStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestMarketStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestMarketStats.displayName = 'proto.mktservice.RequestMarketStats';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestMarketStats.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestMarketStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestMarketStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestMarketStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    basket: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestMarketStats}
 */
proto.mktservice.RequestMarketStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestMarketStats;
  return proto.mktservice.RequestMarketStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestMarketStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestMarketStats}
 */
proto.mktservice.RequestMarketStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.RequestMarketStats.EMarketStats} */ (reader.readEnum());
      msg.setBasket(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.EMarketStatsType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestMarketStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestMarketStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestMarketStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestMarketStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBasket();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.RequestMarketStats.EMarketStats = {
  VN30: 0,
  HNX_LISTED: 2,
  HNX_UPCOM: 3,
  HSX_LISTED: 4,
  HNX30: 5
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestMarketStats.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestMarketStats.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EMarketStats Basket = 2;
 * @return {!proto.mktservice.RequestMarketStats.EMarketStats}
 */
proto.mktservice.RequestMarketStats.prototype.getBasket = function() {
  return /** @type {!proto.mktservice.RequestMarketStats.EMarketStats} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.RequestMarketStats.EMarketStats} value */
proto.mktservice.RequestMarketStats.prototype.setBasket = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional EMarketStatsType Type = 3;
 * @return {!proto.mktservice.EMarketStatsType}
 */
proto.mktservice.RequestMarketStats.prototype.getType = function() {
  return /** @type {!proto.mktservice.EMarketStatsType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.EMarketStatsType} value */
proto.mktservice.RequestMarketStats.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestMarketDistribution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestMarketDistribution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestMarketDistribution.displayName = 'proto.mktservice.RequestMarketDistribution';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestMarketDistribution.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestMarketDistribution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestMarketDistribution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestMarketDistribution.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    basket: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestMarketDistribution}
 */
proto.mktservice.RequestMarketDistribution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestMarketDistribution;
  return proto.mktservice.RequestMarketDistribution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestMarketDistribution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestMarketDistribution}
 */
proto.mktservice.RequestMarketDistribution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.RequestMarketDistribution.EDistribution} */ (reader.readEnum());
      msg.setBasket(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.EMarketDistributionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestMarketDistribution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestMarketDistribution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestMarketDistribution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestMarketDistribution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBasket();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.RequestMarketDistribution.EDistribution = {
  VN30: 0,
  HNX_LISTED: 2,
  HNX_UPCOM: 3,
  HSX_LISTED: 4,
  HNX30: 5
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestMarketDistribution.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestMarketDistribution.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EDistribution Basket = 2;
 * @return {!proto.mktservice.RequestMarketDistribution.EDistribution}
 */
proto.mktservice.RequestMarketDistribution.prototype.getBasket = function() {
  return /** @type {!proto.mktservice.RequestMarketDistribution.EDistribution} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.RequestMarketDistribution.EDistribution} value */
proto.mktservice.RequestMarketDistribution.prototype.setBasket = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional EMarketDistributionType Type = 3;
 * @return {!proto.mktservice.EMarketDistributionType}
 */
proto.mktservice.RequestMarketDistribution.prototype.getType = function() {
  return /** @type {!proto.mktservice.EMarketDistributionType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.EMarketDistributionType} value */
proto.mktservice.RequestMarketDistribution.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestStatMarketADIndicator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestStatMarketADIndicator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestStatMarketADIndicator.displayName = 'proto.mktservice.RequestStatMarketADIndicator';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestStatMarketADIndicator.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestStatMarketADIndicator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestStatMarketADIndicator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatMarketADIndicator.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    by: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestStatMarketADIndicator}
 */
proto.mktservice.RequestStatMarketADIndicator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestStatMarketADIndicator;
  return proto.mktservice.RequestStatMarketADIndicator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestStatMarketADIndicator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestStatMarketADIndicator}
 */
proto.mktservice.RequestStatMarketADIndicator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.EADIndicatorCategory} */ (reader.readEnum());
      msg.setBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestStatMarketADIndicator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestStatMarketADIndicator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestStatMarketADIndicator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatMarketADIndicator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBy();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestStatMarketADIndicator.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestStatMarketADIndicator.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EADIndicatorCategory By = 2;
 * @return {!proto.mktservice.EADIndicatorCategory}
 */
proto.mktservice.RequestStatMarketADIndicator.prototype.getBy = function() {
  return /** @type {!proto.mktservice.EADIndicatorCategory} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.EADIndicatorCategory} value */
proto.mktservice.RequestStatMarketADIndicator.prototype.setBy = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestPriceInfoTicker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestPriceInfoTicker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestPriceInfoTicker.displayName = 'proto.mktservice.RequestPriceInfoTicker';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestPriceInfoTicker.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestPriceInfoTicker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestPriceInfoTicker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestPriceInfoTicker.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestPriceInfoTicker}
 */
proto.mktservice.RequestPriceInfoTicker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestPriceInfoTicker;
  return proto.mktservice.RequestPriceInfoTicker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestPriceInfoTicker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestPriceInfoTicker}
 */
proto.mktservice.RequestPriceInfoTicker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestPriceInfoTicker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestPriceInfoTicker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestPriceInfoTicker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestPriceInfoTicker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestPriceInfoTicker.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestPriceInfoTicker.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Ticker = 2;
 * @return {string}
 */
proto.mktservice.RequestPriceInfoTicker.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mktservice.RequestPriceInfoTicker.prototype.setTicker = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestPriceInfoTickers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.RequestPriceInfoTickers.repeatedFields_, null);
};
goog.inherits(proto.mktservice.RequestPriceInfoTickers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestPriceInfoTickers.displayName = 'proto.mktservice.RequestPriceInfoTickers';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.RequestPriceInfoTickers.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestPriceInfoTickers.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestPriceInfoTickers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestPriceInfoTickers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestPriceInfoTickers.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tickersList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestPriceInfoTickers}
 */
proto.mktservice.RequestPriceInfoTickers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestPriceInfoTickers;
  return proto.mktservice.RequestPriceInfoTickers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestPriceInfoTickers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestPriceInfoTickers}
 */
proto.mktservice.RequestPriceInfoTickers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTickers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestPriceInfoTickers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestPriceInfoTickers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestPriceInfoTickers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestPriceInfoTickers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTickersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestPriceInfoTickers.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestPriceInfoTickers.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string Tickers = 2;
 * @return {!Array<string>}
 */
proto.mktservice.RequestPriceInfoTickers.prototype.getTickersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.mktservice.RequestPriceInfoTickers.prototype.setTickersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.mktservice.RequestPriceInfoTickers.prototype.addTickers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.mktservice.RequestPriceInfoTickers.prototype.clearTickersList = function() {
  this.setTickersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestTimeAndSaleTicker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestTimeAndSaleTicker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestTimeAndSaleTicker.displayName = 'proto.mktservice.RequestTimeAndSaleTicker';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestTimeAndSaleTicker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestTimeAndSaleTicker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestTimeAndSaleTicker.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    day: (f = msg.getDay()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    begin: (f = msg.getBegin()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestTimeAndSaleTicker}
 */
proto.mktservice.RequestTimeAndSaleTicker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestTimeAndSaleTicker;
  return proto.mktservice.RequestTimeAndSaleTicker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestTimeAndSaleTicker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestTimeAndSaleTicker}
 */
proto.mktservice.RequestTimeAndSaleTicker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDay(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBegin(value);
      break;
    case 6:
      var value = /** @type {!proto.mktservice.RequestTimeAndSaleTicker.ETimeAndSaleType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestTimeAndSaleTicker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestTimeAndSaleTicker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestTimeAndSaleTicker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDay();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBegin();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.RequestTimeAndSaleTicker.ETimeAndSaleType = {
  LATEST_MATCH: 0,
  HISTORY_MATCH: 1
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestTimeAndSaleTicker.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Ticker = 2;
 * @return {string}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mktservice.RequestTimeAndSaleTicker.prototype.setTicker = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp Day = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.getDay = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestTimeAndSaleTicker.prototype.setDay = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.mktservice.RequestTimeAndSaleTicker.prototype.clearDay = function() {
  this.setDay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.hasDay = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 Limit = 4;
 * @return {number}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.mktservice.RequestTimeAndSaleTicker.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp Begin = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.getBegin = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestTimeAndSaleTicker.prototype.setBegin = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.mktservice.RequestTimeAndSaleTicker.prototype.clearBegin = function() {
  this.setBegin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.hasBegin = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ETimeAndSaleType Type = 6;
 * @return {!proto.mktservice.RequestTimeAndSaleTicker.ETimeAndSaleType}
 */
proto.mktservice.RequestTimeAndSaleTicker.prototype.getType = function() {
  return /** @type {!proto.mktservice.RequestTimeAndSaleTicker.ETimeAndSaleType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.mktservice.RequestTimeAndSaleTicker.ETimeAndSaleType} value */
proto.mktservice.RequestTimeAndSaleTicker.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestTimeAndSaleTickers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.RequestTimeAndSaleTickers.repeatedFields_, null);
};
goog.inherits(proto.mktservice.RequestTimeAndSaleTickers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestTimeAndSaleTickers.displayName = 'proto.mktservice.RequestTimeAndSaleTickers';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.RequestTimeAndSaleTickers.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestTimeAndSaleTickers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestTimeAndSaleTickers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestTimeAndSaleTickers.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tickersList: jspb.Message.getRepeatedField(msg, 2),
    day: (f = msg.getDay()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    begin: (f = msg.getBegin()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestTimeAndSaleTickers}
 */
proto.mktservice.RequestTimeAndSaleTickers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestTimeAndSaleTickers;
  return proto.mktservice.RequestTimeAndSaleTickers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestTimeAndSaleTickers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestTimeAndSaleTickers}
 */
proto.mktservice.RequestTimeAndSaleTickers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTickers(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDay(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBegin(value);
      break;
    case 6:
      var value = /** @type {!proto.mktservice.RequestTimeAndSaleTickers.ETimeAndSaleType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestTimeAndSaleTickers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestTimeAndSaleTickers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestTimeAndSaleTickers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTickersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getDay();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBegin();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.RequestTimeAndSaleTickers.ETimeAndSaleType = {
  LATEST_MATCH: 0,
  HISTORY_MATCH: 1
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestTimeAndSaleTickers.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string Tickers = 2;
 * @return {!Array<string>}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.getTickersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.mktservice.RequestTimeAndSaleTickers.prototype.setTickersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.addTickers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.mktservice.RequestTimeAndSaleTickers.prototype.clearTickersList = function() {
  this.setTickersList([]);
};


/**
 * optional google.protobuf.Timestamp Day = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.getDay = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestTimeAndSaleTickers.prototype.setDay = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.mktservice.RequestTimeAndSaleTickers.prototype.clearDay = function() {
  this.setDay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.hasDay = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 Limit = 4;
 * @return {number}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.mktservice.RequestTimeAndSaleTickers.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp Begin = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.getBegin = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestTimeAndSaleTickers.prototype.setBegin = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.mktservice.RequestTimeAndSaleTickers.prototype.clearBegin = function() {
  this.setBegin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.hasBegin = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ETimeAndSaleType Type = 6;
 * @return {!proto.mktservice.RequestTimeAndSaleTickers.ETimeAndSaleType}
 */
proto.mktservice.RequestTimeAndSaleTickers.prototype.getType = function() {
  return /** @type {!proto.mktservice.RequestTimeAndSaleTickers.ETimeAndSaleType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.mktservice.RequestTimeAndSaleTickers.ETimeAndSaleType} value */
proto.mktservice.RequestTimeAndSaleTickers.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestOrderFlowDistribution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestOrderFlowDistribution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestOrderFlowDistribution.displayName = 'proto.mktservice.RequestOrderFlowDistribution';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestOrderFlowDistribution.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestOrderFlowDistribution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestOrderFlowDistribution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestOrderFlowDistribution.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    day: (f = msg.getDay()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestOrderFlowDistribution}
 */
proto.mktservice.RequestOrderFlowDistribution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestOrderFlowDistribution;
  return proto.mktservice.RequestOrderFlowDistribution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestOrderFlowDistribution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestOrderFlowDistribution}
 */
proto.mktservice.RequestOrderFlowDistribution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestOrderFlowDistribution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestOrderFlowDistribution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestOrderFlowDistribution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestOrderFlowDistribution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDay();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestOrderFlowDistribution.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestOrderFlowDistribution.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Ticker = 2;
 * @return {string}
 */
proto.mktservice.RequestOrderFlowDistribution.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mktservice.RequestOrderFlowDistribution.prototype.setTicker = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp Day = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mktservice.RequestOrderFlowDistribution.prototype.getDay = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.mktservice.RequestOrderFlowDistribution.prototype.setDay = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.mktservice.RequestOrderFlowDistribution.prototype.clearDay = function() {
  this.setDay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.mktservice.RequestOrderFlowDistribution.prototype.hasDay = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestListTickers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestListTickers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestListTickers.displayName = 'proto.mktservice.RequestListTickers';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestListTickers.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestListTickers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestListTickers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestListTickers.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tickertype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    code: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestListTickers}
 */
proto.mktservice.RequestListTickers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestListTickers;
  return proto.mktservice.RequestListTickers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestListTickers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestListTickers}
 */
proto.mktservice.RequestListTickers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.ETickerType} */ (reader.readEnum());
      msg.setTickertype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestListTickers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestListTickers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestListTickers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestListTickers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTickertype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestListTickers.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestListTickers.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ETickerType TickerType = 2;
 * @return {!proto.mktservice.ETickerType}
 */
proto.mktservice.RequestListTickers.prototype.getTickertype = function() {
  return /** @type {!proto.mktservice.ETickerType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.ETickerType} value */
proto.mktservice.RequestListTickers.prototype.setTickertype = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string Code = 3;
 * @return {string}
 */
proto.mktservice.RequestListTickers.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.mktservice.RequestListTickers.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestMarketRecommendations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestMarketRecommendations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestMarketRecommendations.displayName = 'proto.mktservice.RequestMarketRecommendations';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestMarketRecommendations.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestMarketRecommendations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestMarketRecommendations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestMarketRecommendations.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    institution: jspb.Message.getFieldWithDefault(msg, 2, 0),
    language: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestMarketRecommendations}
 */
proto.mktservice.RequestMarketRecommendations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestMarketRecommendations;
  return proto.mktservice.RequestMarketRecommendations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestMarketRecommendations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestMarketRecommendations}
 */
proto.mktservice.RequestMarketRecommendations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.ERecommendationSource} */ (reader.readEnum());
      msg.setInstitution(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.ELanguage} */ (reader.readEnum());
      msg.setLanguage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestMarketRecommendations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestMarketRecommendations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestMarketRecommendations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestMarketRecommendations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstitution();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLanguage();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestMarketRecommendations.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestMarketRecommendations.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ERecommendationSource Institution = 2;
 * @return {!proto.mktservice.ERecommendationSource}
 */
proto.mktservice.RequestMarketRecommendations.prototype.getInstitution = function() {
  return /** @type {!proto.mktservice.ERecommendationSource} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.ERecommendationSource} value */
proto.mktservice.RequestMarketRecommendations.prototype.setInstitution = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ELanguage Language = 3;
 * @return {!proto.mktservice.ELanguage}
 */
proto.mktservice.RequestMarketRecommendations.prototype.getLanguage = function() {
  return /** @type {!proto.mktservice.ELanguage} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.ELanguage} value */
proto.mktservice.RequestMarketRecommendations.prototype.setLanguage = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 Limit = 4;
 * @return {number}
 */
proto.mktservice.RequestMarketRecommendations.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.mktservice.RequestMarketRecommendations.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestMarketCoverWarrant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestMarketCoverWarrant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestMarketCoverWarrant.displayName = 'proto.mktservice.RequestMarketCoverWarrant';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestMarketCoverWarrant.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestMarketCoverWarrant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestMarketCoverWarrant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestMarketCoverWarrant.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    issuercode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    underlyingcode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestMarketCoverWarrant}
 */
proto.mktservice.RequestMarketCoverWarrant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestMarketCoverWarrant;
  return proto.mktservice.RequestMarketCoverWarrant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestMarketCoverWarrant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestMarketCoverWarrant}
 */
proto.mktservice.RequestMarketCoverWarrant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuercode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnderlyingcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestMarketCoverWarrant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestMarketCoverWarrant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestMarketCoverWarrant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestMarketCoverWarrant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIssuercode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUnderlyingcode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestMarketCoverWarrant.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestMarketCoverWarrant.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string IssuerCode = 2;
 * @return {string}
 */
proto.mktservice.RequestMarketCoverWarrant.prototype.getIssuercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.mktservice.RequestMarketCoverWarrant.prototype.setIssuercode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string UnderlyingCode = 3;
 * @return {string}
 */
proto.mktservice.RequestMarketCoverWarrant.prototype.getUnderlyingcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.mktservice.RequestMarketCoverWarrant.prototype.setUnderlyingcode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestListPriceInfoPutThrough = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mktservice.RequestListPriceInfoPutThrough.repeatedFields_, null);
};
goog.inherits(proto.mktservice.RequestListPriceInfoPutThrough, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestListPriceInfoPutThrough.displayName = 'proto.mktservice.RequestListPriceInfoPutThrough';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mktservice.RequestListPriceInfoPutThrough.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestListPriceInfoPutThrough.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestListPriceInfoPutThrough.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestListPriceInfoPutThrough} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestListPriceInfoPutThrough.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    listbasketList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestListPriceInfoPutThrough}
 */
proto.mktservice.RequestListPriceInfoPutThrough.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestListPriceInfoPutThrough;
  return proto.mktservice.RequestListPriceInfoPutThrough.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestListPriceInfoPutThrough} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestListPriceInfoPutThrough}
 */
proto.mktservice.RequestListPriceInfoPutThrough.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.mktservice.EMarketCode>} */ (reader.readPackedEnum());
      msg.setListbasketList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestListPriceInfoPutThrough.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestListPriceInfoPutThrough.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestListPriceInfoPutThrough} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestListPriceInfoPutThrough.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getListbasketList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestListPriceInfoPutThrough.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestListPriceInfoPutThrough.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated EMarketCode ListBasket = 2;
 * @return {!Array<!proto.mktservice.EMarketCode>}
 */
proto.mktservice.RequestListPriceInfoPutThrough.prototype.getListbasketList = function() {
  return /** @type {!Array<!proto.mktservice.EMarketCode>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<!proto.mktservice.EMarketCode>} value */
proto.mktservice.RequestListPriceInfoPutThrough.prototype.setListbasketList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.mktservice.EMarketCode} value
 * @param {number=} opt_index
 */
proto.mktservice.RequestListPriceInfoPutThrough.prototype.addListbasket = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.mktservice.RequestListPriceInfoPutThrough.prototype.clearListbasketList = function() {
  this.setListbasketList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mktservice.RequestStatDividendMovement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mktservice.RequestStatDividendMovement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.mktservice.RequestStatDividendMovement.displayName = 'proto.mktservice.RequestStatDividendMovement';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mktservice.RequestStatDividendMovement.prototype.toObject = function(opt_includeInstance) {
  return proto.mktservice.RequestStatDividendMovement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mktservice.RequestStatDividendMovement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatDividendMovement.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    basket: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mktservice.RequestStatDividendMovement}
 */
proto.mktservice.RequestStatDividendMovement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mktservice.RequestStatDividendMovement;
  return proto.mktservice.RequestStatDividendMovement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mktservice.RequestStatDividendMovement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mktservice.RequestStatDividendMovement}
 */
proto.mktservice.RequestStatDividendMovement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {!proto.mktservice.RequestStatDividendMovement.EMarketStats} */ (reader.readEnum());
      msg.setBasket(value);
      break;
    case 3:
      var value = /** @type {!proto.mktservice.EDividendMovementType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mktservice.RequestStatDividendMovement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mktservice.RequestStatDividendMovement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mktservice.RequestStatDividendMovement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mktservice.RequestStatDividendMovement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBasket();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mktservice.RequestStatDividendMovement.EMarketStats = {
  VN30: 0,
  HNX_LISTED: 2,
  HNX_UPCOM: 3,
  HSX_LISTED: 4,
  HNX30: 5
};

/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.mktservice.RequestStatDividendMovement.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.mktservice.RequestStatDividendMovement.prototype.setRequestid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EMarketStats Basket = 2;
 * @return {!proto.mktservice.RequestStatDividendMovement.EMarketStats}
 */
proto.mktservice.RequestStatDividendMovement.prototype.getBasket = function() {
  return /** @type {!proto.mktservice.RequestStatDividendMovement.EMarketStats} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mktservice.RequestStatDividendMovement.EMarketStats} value */
proto.mktservice.RequestStatDividendMovement.prototype.setBasket = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional EDividendMovementType Type = 3;
 * @return {!proto.mktservice.EDividendMovementType}
 */
proto.mktservice.RequestStatDividendMovement.prototype.getType = function() {
  return /** @type {!proto.mktservice.EDividendMovementType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.mktservice.EDividendMovementType} value */
proto.mktservice.RequestStatDividendMovement.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


goog.object.extend(exports, proto.mktservice);
